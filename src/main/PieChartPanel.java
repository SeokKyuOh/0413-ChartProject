package main;

import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

public class PieChartPanel {
	JFreeChart chart;
	DefaultPieDataset dataSet;
	Connection con;
	
	public PieChartPanel(Connection con) {		//커넥션을 생성자에서 불러오자
		this.con = con;
		
	}
	
	//성별 분석
	public void getGenderData(){
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sql = new StringBuffer();
		sql.append("select gender, count(gender) as 응시자수, (select count(*) from score) as 총학생");
		sql.append(", (count(gender) /(select count(*) from score))*100 as 비율");
		sql.append(" from score group by gender");
		
		try {
			pstmt = con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			
			dataSet = new DefaultPieDataset();	//먼저 존재해야 while문에서 담을 수 있기 때문에..
			
			while(rs.next()){
				dataSet.setValue(rs.getString("gender"), rs.getInt("비율"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			if(rs!=null){
				try {
					rs.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(pstmt!=null){
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		} 
		
		
		/*
		dataSet = new DefaultPieDataset();
		dataSet.setValue("남", 65);
		dataSet.setValue("여", 35);
		*/
	} 
	
	//학년별 분석
	public void getGradeData(){
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sql = new StringBuffer();
		sql.append("select grade, count(gender) as 응시자수");
		sql.append(", (count(grade) /(select count(*) from score))*100 as 비율");
		sql.append(" from score group by grade");
		
		try {
			pstmt = con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			
			dataSet = new DefaultPieDataset();	//먼저 존재해야 while문에서 담을 수 있기 때문에..
			
			while(rs.next()){
				dataSet.setValue(rs.getString("grade"), rs.getInt("비율"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			if(rs!=null){
				try {
					rs.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if(pstmt!=null){
				try {
					pstmt.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		} 
	}
	
	public ChartPanel showChart(){
		//getGenderData();
		getGradeData();
		
		chart = ChartFactory.createPieChart("성적 데이터 분석", dataSet, true, true, false);
		
		//현재 차트에 설정된 폰트를 한글폰트로 바꾸지 않으면 깨진다.
		//System.out.println(chart.getTitle().getFont().getFontName());		//확인해보자.
		
		Font oldTitle = chart.getTitle().getFont();		//기존 폰트의 스타일 명시하기.
		chart.getTitle().setFont(new Font("굴림", oldTitle.getStyle(), oldTitle.getSize()));
		
		Font oldLegend = chart.getTitle().getFont();
		chart.getLegend().setItemFont(new Font("굴림", oldLegend.getStyle(), oldLegend.getSize()));
		
		PiePlot plot = (PiePlot)chart.getPlot();
		plot.setLabelFont(new Font("굴림", oldLegend.getStyle(), oldLegend.getSize()));
		
		ChartPanel chartPanel = new ChartPanel(chart);
		return chartPanel;		//showChart 호출하면 바로 붙게 리턴 줌.
		
		
	}
}
